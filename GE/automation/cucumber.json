[
  {
    "uri": "features/appengine/BAT.feature",
    "id": "bat-(smoke-tests)",
    "keyword": "Feature",
    "name": "BAT (Smoke Tests)",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "bat-(smoke-tests);da---import-and-run-a-dynamic-adapter-then-query-data-with-indexer-search",
        "keyword": "Scenario",
        "name": "DA - Import and Run a Dynamic Adapter then query data with Indexer Search",
        "description": "",
        "line": 229,
        "type": "scenario",
        "tags": [
          {
            "name": "@AppEngine",
            "line": 226
          },
          {
            "name": "@AppEngine_BAT",
            "line": 227
          },
          {
            "name": "@AppEngine_BAT_23",
            "line": 228
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:33"
            },
            "result": {
              "status": "passed",
              "duration": 9293559000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I log into AppEngine/Studio/Portal/AppExt application",
            "line": 230,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 36197814000
            }
          },
          {
            "keyword": "And ",
            "name": "I navigate to \"Indexer Search\" page",
            "line": 231,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:47"
            },
            "result": {
              "status": "passed",
              "duration": 6761567000
            }
          },
          {
            "keyword": "When ",
            "name": "I enter \"assets\" in the \"indices\" field of \"Search Conditions panel\"",
            "line": 232,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:317"
            },
            "result": {
              "status": "passed",
              "duration": 3278982000
            }
          },
          {
            "keyword": "And ",
            "name": "I click \"Search\" button",
            "line": 233,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:236"
            },
            "result": {
              "status": "passed",
              "duration": 4195247000
            }
          },
          {
            "keyword": "When ",
            "name": "I navigate to \"Dynamic Adapters\" page",
            "line": 235,
            "comments": [
              {
                "value": "#Then I should not see \"AST_1\" record in the \"Indexer Results\" grid",
                "line": 234
              }
            ],
            "match": {
              "location": "features/step_definitions/appengine/common.rb:47"
            },
            "result": {
              "status": "passed",
              "duration": 7945628000
            }
          },
          {
            "keyword": "And ",
            "name": "I search for \"AppEngine_BAT_DA\" using the \"Adapter Id\" search field",
            "line": 236,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:563"
            },
            "result": {
              "status": "passed",
              "duration": 3443830000
            }
          },
          {
            "keyword": "And ",
            "name": "I find an existent \"AppEngine_BAT_DA\" record",
            "line": 237,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:785"
            },
            "result": {
              "status": "passed",
              "duration": 3126977000
            }
          },
          {
            "keyword": "Then ",
            "name": "I delete \"AppEngine_BAT_DA\" record from the grid",
            "line": 238,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:596"
            },
            "result": {
              "status": "passed",
              "duration": 81602000
            }
          },
          {
            "keyword": "When ",
            "name": "I click \"Restore\" button",
            "line": 239,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:236"
            },
            "result": {
              "status": "passed",
              "duration": 4175603000
            }
          },
          {
            "keyword": "Then ",
            "name": "I should be displayed with the \"Import XML\" popup",
            "line": 240,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:61"
            },
            "result": {
              "status": "passed",
              "duration": 5134149000
            }
          },
          {
            "keyword": "When ",
            "name": "I enter the \"AppEngine_BAT_DA\" adapter definition in the text area",
            "line": 241,
            "output": [
              "<xmp><AdapterDefinition xmlns:mix=\"http://bitstew.com/schemas/1.0/xml-template\" xmlns:emix=\"http://bitstew.com/schemas/1.0/xml-template\">\r\n <Config>\r\n  <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n  <Name>AppEngine_BAT_DA</Name>\r\n  <Description>Generates assets using MIx functions</Description>\r\n  <Type>Asset</Type>\r\n  <Separator>$numberOfRecords</Separator>\r\n  <StartLine>1</StartLine>\r\n  <RequestMethod>POST</RequestMethod>\r\n  <BatchSize>100</BatchSize>\r\n  <InitCode><mix:variable name=\"numberOfRecords\" select=\"(1 to 100)\" /><mix:function name=\"randomPast_dateTime\" as=\"xs:dateTime\">\r\n   <mix:param name=\"numDays\" as=\"xs:integer\"/>\r\n   <mix:variable name=\"randomNumbers\" select=\"xfn:random-integer(1,$numDays)\"/>\r\n   <mix:variable name=\"current\" select=\"current-dateTime()\" as=\"xs:dateTime\"/>\r\n   <mix:variable name=\"hours\" select=\"xfn:random-integer(0,23)\" />\r\n   <mix:variable name=\"mins\" select=\"xfn:random-integer(0,59)\" />\r\n   <mix:variable name=\"secs\" select=\"xfn:random-integer(0,59)\" />\r\n   <mix:variable name=\"dates\" select=\"$current - xdt:dayTimeDuration('P{$randomNumbers}DT{$hours}H{$mins}M{$secs}S')\" />\r\n   <mix:copy-of select=\"$dates - xdt:dayTimeDuration('-P1D')\" />\r\n  </mix:function><mix:function xmlns:emix=\"http://bitstew.com/schemas/1.0/xml-template\" name=\"rand_ip\" as=\"xs:string\">\r\n   <emix:variable name=\"f1\" select=\"xfn:random-integer(128,254)\" />\r\n   <emix:variable name=\"f2\" select=\"xfn:random-integer(1,254)\" />\r\n   <emix:variable name=\"f3\" select=\"xfn:random-integer(1,254)\" />\r\n   <emix:variable name=\"f4\" select=\"xfn:random-integer(1,254)\" />\r\n   {$f1}.{$f2}.{$f3}.{$f4}\r\n  </mix:function></InitCode>\r\n  <EndCode/>\r\n  <Status>ACTIVE</Status>\r\n  <SourceType>jdbc</SourceType>\r\n  <SourceLocation/>\r\n  <AdapterMappings>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.lifecycle.installationDate</URN>\r\n    <DataMapping>{randomPast_dateTime(45)}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.family</URN>\r\n    <DataMapping>{xfn:one-of((\"Hampton Bay\",\"Hinkley\",\"Schneider Electric\",\"Cooper Bussmann\",\"Leviton Decora\",\"GE\"))}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.recordDateTime</URN>\r\n    <DataMapping>{current-dateTime()}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.id</URN>\r\n    <DataMapping>AST_{$data}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.manufacturer</URN>\r\n    <DataMapping>{xfn:one-of((\"Elster\",\"GE\",\"Itron\",\"Landis Gyr\",\"ABB\",\"Aclara\",\"Badger Meter\",\"Actaris\",\"Diehl\",\"Krohne\",\"CGI\",\"EDMI\"))}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.communicationInterval</URN>\r\n    <DataMapping>{xfn:one-of((\"hourly\",\"daily\",\"weekly\",\"fortnightly\",\"monthly\",\"yearly\",\"on demand\"))}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.fatalError.dateTime</URN>\r\n    <DataMapping>{randomPast_dateTime(15)}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.type</URN>\r\n    <DataMapping>{xfn:one-of((\"Water\",\"Gas\",\"Electric\"))}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.shipmentLocation.direction</URN>\r\n    <DataMapping>{xfn:one-of((\"North\",\"North West\",\"West\",\"South West\",\"South\",\"South East\",\"East\",\"North East\"))}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.authenticated</URN>\r\n    <DataMapping>{xfn:one-of((\"true\",\"false\"))}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>\r\n   <Mapping>\r\n    <AdapterId>AppEngine_BAT_DA</AdapterId>\r\n    <AdapterType>Asset</AdapterType>\r\n    <URN>data.field.asset.billingMultiplier</URN>\r\n    <DataMapping>{xfn:random-integer(1,5)}</DataMapping>\r\n    <ElementType/>\r\n    <Notes/>\r\n   </Mapping>  \r\n  </AdapterMappings>\r\n </Config>\r\n</AdapterDefinition></xmp>"
            ],
            "match": {
              "location": "features/step_definitions/appengine/common.rb:390"
            },
            "result": {
              "status": "passed",
              "duration": 3096335000
            }
          },
          {
            "keyword": "And ",
            "name": "I click \"Import\" button",
            "line": 242,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:236"
            },
            "result": {
              "status": "passed",
              "duration": 4154608000
            }
          },
          {
            "keyword": "Then ",
            "name": "I should see Configuration XML successfully restored. message on a growler",
            "line": 243,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:765"
            },
            "result": {
              "status": "passed",
              "duration": 3018903000
            }
          },
          {
            "keyword": "When ",
            "name": "I search and select the \"AppEngine_BAT_DA\" record using the \"Adapter Id\" field",
            "line": 244,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:549"
            },
            "result": {
              "status": "passed",
              "duration": 3550223000
            }
          },
          {
            "keyword": "And ",
            "name": "I click \"Run\" button",
            "line": 245,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:236"
            },
            "result": {
              "status": "passed",
              "duration": 4198384000
            }
          },
          {
            "keyword": "Then ",
            "name": "I should see Action completed with no errors. message on a growler",
            "line": 246,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:765"
            },
            "result": {
              "status": "passed",
              "duration": 3015670000
            }
          },
          {
            "keyword": "When ",
            "name": "I navigate to \"Indexer Search\" page",
            "line": 247,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:47"
            },
            "result": {
              "status": "passed",
              "duration": 7570310000
            }
          },
          {
            "keyword": "And ",
            "name": "I enter \"assets\" in the \"indices\" field of \"Search Conditions panel\"",
            "line": 248,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:317"
            },
            "result": {
              "status": "passed",
              "duration": 3301786000
            }
          },
          {
            "keyword": "And ",
            "name": "I enter \"Asset\" in the \"types\" field of \"Search Conditions panel\"",
            "line": 249,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:317"
            },
            "result": {
              "status": "passed",
              "duration": 3270721000
            }
          },
          {
            "keyword": "And ",
            "name": "I uncheck \"displayCharts\" on Search Conditions panel",
            "line": 250,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:529"
            },
            "result": {
              "status": "passed",
              "duration": 3111644000
            }
          },
          {
            "keyword": "And ",
            "name": "I select Match Query option on Search Conditions panel",
            "line": 251,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:503"
            },
            "result": {
              "status": "passed",
              "duration": 778969000
            }
          },
          {
            "keyword": "And ",
            "name": "I enter {\"match\":{ \"id\":\"AST_1\"}} into query definition",
            "line": 252,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:400"
            },
            "result": {
              "status": "passed",
              "duration": 3009888000
            }
          },
          {
            "keyword": "And ",
            "name": "I click \"Search\" button",
            "line": 253,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:236"
            },
            "result": {
              "status": "passed",
              "duration": 4201000000
            }
          },
          {
            "keyword": "Then ",
            "name": "I should see \"AST_1\" record in the \"Indexer Results\" grid",
            "line": 254,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:727"
            },
            "result": {
              "status": "passed",
              "duration": 51786000
            }
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:49"
            },
            "result": {
              "status": "passed",
              "duration": 906651000
            }
          }
        ]
      },
      {
        "id": "bat-(smoke-tests);da---delete-dynamic-adapter",
        "keyword": "Scenario",
        "name": "DA - Delete Dynamic Adapter",
        "description": "",
        "line": 259,
        "type": "scenario",
        "tags": [
          {
            "name": "@AppEngine",
            "line": 256
          },
          {
            "name": "@AppEngine_BAT",
            "line": 257
          },
          {
            "name": "@AppEngine_BAT_23",
            "line": 258
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:33"
            },
            "result": {
              "status": "passed",
              "duration": 10022081000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I log into AppEngine/Studio/Portal/AppExt application",
            "line": 260,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 36215732000
            }
          },
          {
            "keyword": "And ",
            "name": "I navigate to \"Dynamic Adapters\" page",
            "line": 261,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:47"
            },
            "result": {
              "status": "passed",
              "duration": 7352841000
            }
          },
          {
            "keyword": "When ",
            "name": "I search for \"AppEngine_BAT_DA\" using the \"Adapter Id\" search field",
            "line": 262,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:563"
            },
            "result": {
              "status": "passed",
              "duration": 3515107000
            }
          },
          {
            "keyword": "And ",
            "name": "I find an existent \"AppEngine_BAT_DA\" record",
            "line": 263,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:785"
            },
            "result": {
              "status": "passed",
              "duration": 3164672000
            }
          },
          {
            "keyword": "Then ",
            "name": "I delete \"AppEngine_BAT_DA\" record from the grid",
            "line": 264,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:596"
            },
            "result": {
              "status": "passed",
              "duration": 3581291000
            }
          },
          {
            "keyword": "When ",
            "name": "I search for \"AppEngine_BAT_DA\" using the \"Adapter Id\" search field",
            "line": 265,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:563"
            },
            "result": {
              "status": "failed",
              "error_message": "unknown error: Element <input type=\"text\" style=\"width:100%;padding:0px;\" name=\"adapterId\" id=\"gs_adapterId\" value=\"\"> is not clickable at point (120, 262). Other element would receive the click: <div class=\"ui-jqdialog-content ui-widget-content\" id=\"delcntgdGridTable_panel_253\">...</div>\n  (Session info: chrome=71.0.3578.98)\n  (Driver info: chromedriver=2.45.615355 (d5698f682d8b2742017df6c81e0bd8e6a3063189),platform=Mac OS X 10.14.2 x86_64) (Selenium::WebDriver::Error::UnknownError)\n./features/step_definitions/appengine/common.rb:590:in `/^I search for \"([^\"]*)\" using the \"([^\"]*)\" search field$/'\nfeatures/appengine/BAT.feature:265:in `When I search for \"AppEngine_BAT_DA\" using the \"Adapter Id\" search field'",
              "duration": 670284000
            }
          },
          {
            "keyword": "Then ",
            "name": "I should not see \"AppEngine_BAT_DA\" record in the \"Manage Adapter Configuration\" grid",
            "line": 266,
            "match": {
              "location": "features/step_definitions/appengine/common.rb:727"
            },
            "result": {
              "status": "skipped"
            }
          }
        ],
        "after": [
          {
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/support/hooks.rb:49"
            },
            "result": {
              "status": "passed",
              "duration": 1816543000
            }
          }
        ]
      }
    ]
  }
]