# frozen_string_literal: true
require 'rspec/core/rake_task'
require 'rubygems'
require 'cucumber'

PLATFORMS = %w[windows_10_chrome_latest windows_10_chrome_latest_minus1 macOS_High_Sierra_Safari_latest_minus1 windows_10_ie_latest windows_10_ie_latest_minus1 macOS_Mojave_chrome_latest ]

PLATFORMS.each do |platform|
  desc "Run tests in parallel within suite using #{platform}"
  task platform.to_s do
    ENV['PLATFORM'] = platform
    system "parallel_cucumber features/ -n 8 --group-by scenarios -o \" --tags #{ENV['tags']} --format pretty\""
  end
end

#
# For use in building a unique Build Name for Sauce Labs
#
ENV['SAUCE_START_TIME'] = "Ruby-RSpec-Selenium: Local-#{Time.now.to_i}"

#
# Uses parallel-split-test gem to set the number of tests that get run in parallel
# parallel_split_test gem splits up tests within files
#
ENV['PARALLEL_SPLIT_TEST_PROCESSES'] = '8'

# Ideally run one of these Rake Tasks in your CI rather than
# setting the 2 ENV variables and executing this command
#
desc 'Run tests in parallel within suite using Windows 10 with chrome latest'
task :windows_10_chrome_latest do
  ENV['PLATFORM'] = 'windows_10_chrome_latest'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using Windows 10 with chrome latest -1'
task :windows_10_chrome_latest_minus1 do
  ENV['PLATFORM'] = 'windows_10_chrome_latest_minus1'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using Windows 10 with ie latest'
task :windows_10_ie_latest do
  ENV['PLATFORM'] = 'windows_10_ie_latest'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using Windows 10 with ie latest -1'
task :windows_10_ie_latest_minus1 do
  ENV['PLATFORM'] = 'windows_10_ie_latest_minus1'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using macOS_Mojave with chrome latest'
task :macOS_Mojave_chrome_latest do
  ENV['PLATFORM'] = 'macOS_Mojave_chrome_latest'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using macOS_Mojave with chrome latest-1'
task :macOS_Mojave_chrome_latest_minus1 do
  ENV['PLATFORM'] = 'macOS_Mojave_chrome_latest_minus1'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using Mac OS Mojave with safari latest'
task :macOS_Mojave_safari_latest do
  ENV['PLATFORM'] = 'macOS_Mojave_safari_latest'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using Mac OS Mojave with safari latest-1'
task :macOS_Mojave_safari_latest_minus1 do
  ENV['PLATFORM'] = 'macOS_Mojave_safari_latest_minus1'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using macOS_High_Sierra with safari latest'
task :macOS_High_Sierra_Safari_latest do
  ENV['PLATFORM'] = 'macOS_High_Sierra_Safari_latest'
  system 'parallel_split_test spec'
end

desc 'Run tests in parallel within suite using macOS_High_Sierra with safari latest-1'
task :macOS_High_Sierra_Safari_latest_minus1 do
  ENV['PLATFORM'] = 'macOS_High_Sierra_Safari_latest_minus1'
  system 'parallel_split_test spec'
end



# Always set a Default Task
#
task :default do
  Rake::Task[:windows_10_chrome_latest].execute
end

@success = true


# PLATFORMS.each do |platform|
#   task "#{platform}_demo" do
#     ENV['PLATFORM'] = platform
#     begin
#       @result = system "parallel_cucumber features/ -n 8 --group-by scenarios -o \"--format html --out report.html --tags #{ENV['tags']} --format pretty\""
#     ensure
#       @success &= @result
#     end
#   end
# end
#
# desc "Run multiple platforms simultaneously"
# multitask parallel_run: PLATFORMS.map { |p| "#{p}_demo" } do
#   begin
#     raise StandardError, "Tests failed!" unless @success
#   ensure
#     @success &= @result
#   end
# end